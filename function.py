# -*- coding: utf-8 -*-
"""
Created on Tue Oct 16 16:42:19 2018

@author: huashuo
"""
#要调用一个函数，需要知道函数的名称和参数
#查看abs函数的帮助信息
help(abs)
# =============================================================================
# #传入的参数数量不对，会报错，并提示abs只有一个参数
# abs(2,4)#TypeError: abs() takes exactly one argument (2 given)
# =============================================================================

# =============================================================================
# #如果传入的参数数量是对的，但参数类型不能被函数所接受，也会报TypeError的错误
# abs('c')#TypeError: bad operand type for abs(): 'str'
# =============================================================================

# =============================================================================
# #函数max()可以接收任意多个参数，并返回最大的那个
# print(max(1,3,9,-1,-5))
# 
# =============================================================================

# =============================================================================
# #数据类型转换函数
# print(int('123'))
# #print(int('a'))
# print(int(12.38))
# print(float(12))
# print(str(12.34))
# print(str(100))
# print(bool(''))
# print(bool('a'))
# =============================================================================

# =============================================================================
# #函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量
# #相当于给这个函数起了一个“别名”：
# a=abs
# print(a(-1.3))
# =============================================================================

# =============================================================================
# #练习
# #请利用Python内置的hex()函数把一个整数转换成十六进制表示的字符串：
# 
# n1=255
# n2=1000
# 
# print(str(hex(255)))
# print(str(hex(1000)))
# =============================================================================

#在Python中，定义一个函数要使用def语句，依次写出函数名、括号、括号中的参数和冒号:，
#然后，在缩进块中编写函数体，函数的返回值用return语句返回。

#自定义一个求绝对值的my_abs函数
def my_abs(x):
    if x>0:
        return x
    else:
        return -x

print(my_abs(-9))


# =============================================================================
# #定义空函数
# def pop():
#     pass#pass语句什么都不做,但可以用来做占位符
# 
# #pass还可以用在其他语句里
# age=20
# if age>=18:
#    pass#不用pass会有语法错误,SyntaxError: unexpected EOF while parsing
# =============================================================================


# =============================================================================
# #函数参数个数不对
# #print(my_abs(-10,-1))#TypeError: my_abs() takes 1 positional argument but 2 were given
# 
# #参数类型不对，Python解释器就无法帮我们检查
# #print(my_abs('A'))#TypeError: '>' not supported between instances of 'str' and 'int'
# #print(abs('A'))#TypeError: bad operand type for abs(): 'str'
# =============================================================================


# =============================================================================
# #修改一下my_abs的定义，对参数类型做检查，只允许整数和浮点数类型的参数。
# #数据类型检查可以用内置函数isinstance()实现：
# def my_abs2(x):
#     if not isinstance(x,(int,float)):
#         raise TypeError('bad operand type')
#     if x>=0:
#         return x
#     else:
#         return -x
# 
# print(my_abs2('A'))
# =============================================================================

# =============================================================================
# #返回多个值
# import math
# 
# def move(x,y,step,angle=0):#有0无0结果无影响
#     nx=x+step*math.cos(angle)
#     ny=y-step*math.sin(angle)
# 
# x,y=move(100,100,60,math.pi/6)
# print(x,y)
# 
# #但其实这只是一种假象，Python函数返回的仍然是单一值
# r=move(100,100,60,math.pi/6)
# print(r)
# =============================================================================

#练习
#请定义一个函数quadratic(a, b, c)，接收3个参数，返回一元二次方程：
#ax2 + bx + c = 0的两个解。
#提示：计算平方根可以调用math.sqrt()函数：

import math
def quadratic(a,b,c):
    for i in [a,b,c]:
        if not isinstance(i,(int,float)):
            raise TypeError('bad operand type')
    d=b**2-4*a*c
    if d>=0:
        x1=(-b+math.sqrt(d))/(2*a)
        x2=(-b-math.sqrt(d))/(2*a)
        return x1,x2
    else:
        return('该方程没有实根')

x=quadratic(2,3,1)
print(x)   

x=quadratic(1,3,-4)   
print(x)

x=quadratic(1,1,1)   
print(x)
    
print('quadratic(2,3,1)=',quadratic(2,3,1))































 
    
    